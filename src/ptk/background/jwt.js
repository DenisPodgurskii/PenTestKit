/* Author: Denis Podgurskii */
import { ptk_logger, ptk_utils, ptk_storage } from "./utils.js"
import CryptoES from '../packages/crypto-es/index.js'

const worker = self

export class ptk_jwt {
    constructor() {
        this.storageKey = "ptk_jwt"
        this.storage = {}
        this.addMessageListiners()
    }


    addMessageListiners() {
        this.onMessage = this.onMessage.bind(this)
        browser.runtime.onMessage.addListener(this.onMessage)
    }

    onMessage(message, sender, sendResponse) {

        if (!ptk_utils.isTrustedOrigin(sender))
            return Promise.reject({ success: false, error: 'Error origin value' })

        if (message.channel == "ptk_popup2background_jwt") {
            if (this["msg_" + message.type]) {
                return this["msg_" + message.type](message)
            }
            return Promise.resolve()
        }
    }

    async msg_init(message) {
        this.storage = await ptk_storage.getItem(this.storageKey)
        let activeTab = worker.ptk_app.proxy.activeTab
        let cookies = []
        if (activeTab?.tabId) cookies = await worker.ptk_app.session.getAllCookiesByTab(activeTab.tabId)
        return Promise.resolve(Object.assign({}, {
            storage: JSON.parse(JSON.stringify(this.storage)),
            cookies: cookies,
            tab: activeTab
        }))
    }


    async msg_save(message) {
        return ptk_storage.setItem(this.storageKey, { "token": message.token })
    }

    async msg_reset(message) {
        return ptk_storage.setItem(this.storageKey, {})
    }



}
